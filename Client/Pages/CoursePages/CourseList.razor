@page "/courseList"

@inject NavigationManager _navigationManager
@inject ICourseService _courseService

<br />
<style>
    .custom-image {
        width: 200px;
        height: 150px; /* 4:3 en-boy oranı */
        object-fit: cover;
    }
</style>

<div class="row">
    @if (courseList != null)
    {
        foreach (var course in courseList)
        {
            <div class="col-3" style="padding: 40px;">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@course.Name</h5>
                        <h6 class="card-subtitle text-muted">@course.SubTitle</h6>
                    </div>
                    <div class="card-body">
                        @if (course.ImageUrl != null)
                        {
                            <img class="d-block w-100 custom-image" src="@course.ImageUrl" />
                        }
                        else
                        {
                            <img class="custom-image" src="CourseImages/4f942f3f-4f53-431a-8553-80c62926e1cb.jpg" />
                        }
                    </div>
                    <div class="card-body">
                        <p class="card-text">@course.Description</p>
                    </div>
                    <hr />
                    <div class="card-body">
                        <p class="card-text">Price: @course.CoursePrice</p>
                        <hr />
                        <p class="card-text">Total Course Count: @course.TotalCount</p>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-warning" @onclick="() => HandleGoDetail(course.Id)">Detail</button>
                        <button class="btn btn-primary" @onclick="()=>HandleGoCheckout(course.Id)">Buy Course</button>
                    </div>
                    <div class="card-footer">
                        Create Date: @course.CreatedDate
                    </div>
                </div>
            </div>
        }
    }
</div>


@code
{
    public IEnumerable<CourseDto> courseList { get; set; } = new List<CourseDto>();
    public string ErrorMessage { get; set; }
    public int TotalCount { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetAllCourse();
        }
        catch (Exception ex)
        {

            ErrorMessage = ex.Message.ToString();
        }
    }

    private async Task GetAllCourse()
    {
        var data = await _courseService.GetAllCourse();
        courseList = data.Data;
        ErrorMessage = data.Message;
        TotalCount = data.TotalCount;
    }
    private void HandleGoDetail(int courseId)
    {
        _navigationManager.NavigateTo("courseDetail/" + courseId);
    }
    private void HandleGoCheckout(int courseId)
    {
        _navigationManager.NavigateTo("courseCheckout/" + courseId);
    }
}